Parameters:
  Environment:
    Description: Environment
    Type: String
    Default: dev
  ECRName:
    Description: ECR name
    Type: String
    Default: newpacktdelivery
  DefaultTag:
    Description: Tag name for docker images
    Type: String
    Default: dev
Resources:

#---------------------INFRASTRUCTURE
  PacktDeliveryJakartaInternetGateway:
    Type: AWS::EC2::InternetGateway
    
  PacktDeliveryJakartaVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      
  PacktDeliveryJakartaAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref PacktDeliveryJakartaVPC
      InternetGatewayId: !Ref PacktDeliveryJakartaInternetGateway

      
  PacktDeliveryJakartaSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PacktDeliveryJakartaVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-1a"
  PacktDeliveryJakartaSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PacktDeliveryJakartaVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1b"
      
  PacktDeliveryJakartaRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PacktDeliveryJakartaVPC
      
  PacktDeliveryJakartaInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: PacktDeliveryJakartaAttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref PacktDeliveryJakartaInternetGateway
      RouteTableId: !Ref PacktDeliveryJakartaRouteTable
      
  PacktDeliveryJakartaSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PacktDeliveryJakartaRouteTable
      SubnetId: !Ref PacktDeliveryJakartaSubnet1
  PacktDeliveryJakartaSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PacktDeliveryJakartaRouteTable
      SubnetId: !Ref PacktDeliveryJakartaSubnet2
      
  PacktDeliveryJakartaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub packt-delivery-jakartaee-sg-${Environment}
      GroupDescription: Security group for loadbalancer
      VpcId: !Ref PacktDeliveryJakartaVPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          
  PacktDeliveryJakartaLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub packt-delivery-jakartaee-lb-${Environment}
      Subnets:
        - !Ref PacktDeliveryJakartaSubnet1
        - !Ref PacktDeliveryJakartaSubnet2
      SecurityGroups:
        - !Ref PacktDeliveryJakartaSecurityGroup
  PacktDeliveryJakartaLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub packt-delivery-jakartaee-tg-${Environment}
      Protocol: HTTP
      Port: 80
      VpcId: !Ref PacktDeliveryJakartaVPC
      TargetType: ip
  PacktDeliveryJakartaLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref PacktDeliveryJakartaLoadBalancer
      Protocol: HTTP
      Port: 8080
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PacktDeliveryJakartaLoadBalancerTargetGroup
          
  #ECS
  PacktDeliveryJakartaECSCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/packt-delivery-jakartaee-ecs-${Environment}
      RetentionInDays: 7
  PacktDeliveryJakartaECSCluster:
    Type: AWS::ECS::Cluster
    Properties: 
      ClusterName: !Sub packt-delivery-jakartaee-ecs-${Environment}
  PacktDeliveryJakartaECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      Memory: 1024
      Cpu: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - 'FARGATE'
      TaskRoleArn: !Ref PacktDeliveryECSRole
      ExecutionRoleArn: !Ref PacktDeliveryECSRole
      ContainerDefinitions:
        - Name: !Sub packt-delivery-jakartaee-cd-${Environment}
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRName}:${DefaultTag}
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref PacktDeliveryJakartaECSCloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: packt-delivery
  PacktDeliveryJakartaECSService:
    Type: AWS::ECS::Service
    DependsOn:
    - PacktDeliveryJakartaLoadBalancer
    - PacktDeliveryJakartaLoadBalancerTargetGroup
    Properties:
      ServiceName: !Sub packt-delivery-jakartaee-ser-${Environment}
      TaskDefinition: !Ref PacktDeliveryJakartaECSTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      LoadBalancers:
      - TargetGroupArn: !Ref PacktDeliveryJakartaLoadBalancerTargetGroup
        ContainerPort: 8080
        ContainerName: !Sub packt-delivery-jakartaee-cd-${Environment}
      Cluster: !Ref PacktDeliveryJakartaECSCluster
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PacktDeliveryJakartaSubnet1
            - !Ref PacktDeliveryJakartaSubnet2
          SecurityGroups:
            - !Ref PacktDeliveryJakartaSecurityGroup
  PacktDeliveryECSRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub packt-delivery-jakartaee-po-${Environment}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
                
#DB
  PacktDeliveryJakartaSubnetDBMaster:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PacktDeliveryJakartaVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "us-east-1c"
      MapPublicIpOnLaunch: true
  PacktDeliveryJakartaSubnetDBReplica:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PacktDeliveryJakartaVPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: "us-east-1b"
      MapPublicIpOnLaunch: true
  PacktDeliveryJakartaSubnetDBMasterRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PacktDeliveryJakartaRouteTable
      SubnetId: !Ref PacktDeliveryJakartaSubnetDBMaster
  PacktDeliveryJakartaSubnetDBReplicaRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PacktDeliveryJakartaRouteTable
      SubnetId: !Ref PacktDeliveryJakartaSubnetDBReplica
  PacktDeliveryJakartaDBMasterSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DBSubnetGroup for RDS instances
      SubnetIds:
        - Ref: PacktDeliveryJakartaSubnetDBMaster
        - Ref: PacktDeliveryJakartaSubnetDBReplica
  PacktDeliveryMySQL:
    Type: AWS::RDS::DBInstance
    Properties:
      VPCSecurityGroups:
      - Ref: PacktDeliveryJakartaSecurityGroup
      AllocatedStorage: '5'
      DBInstanceClass: db.m3.medium
      Engine: MySQL
      EngineVersion: 8.0
      MasterUsername: MyName
      MasterUserPassword: MyPassword
      DBSubnetGroupName: !Ref PacktDeliveryJakartaDBMasterSubnetGroup
    DeletionPolicy: Delete
#---------------------INFRASTRUCTURE
#---------------------PIPELINE

  PacktDeliveryCodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-NewPacktDelivery
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  PacktDeliveryCodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-NewPacktDelivery
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  PacktDeliveryCodePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub packt-delivery-pipeline-${Environment}    
      VersioningConfiguration:
        Status: Enabled
      
  PacktDeliveryJakartaeeCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub packt-delivery-jakartaee-code-build-${Environment}
      Description: CodeBuild for Jakarta side
      ServiceRole: !GetAtt PacktDeliveryCodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
         - Name: IMAGE_REPO_NAME
           Value: !Sub ${ECRName}
         - Name: IMAGE_TAG
           Value: !Sub ${DefaultTag}
         - Name: AWS_ACCOUNT_ID
           Value: !Sub ${AWS::AccountId}
         - Name: GLASSFISH_PASSWORD
           Value: glassfish
         - Name: DATABASE_USER
           Value: MyName
         - Name: DATABASE_PASSWORD
           Value: MyPassword
         - Name: DATABASE_URL
           Value: !GetAtt PacktDeliveryMySQL.Endpoint.Address
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
    DependsOn:
      - PacktDeliveryCodePipelineBucket
        
  PacktDeliveryJakartaeeDeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub packt-delivery-jakartaee-code-pipe-${Environment}
      RoleArn: !GetAtt PacktDeliveryCodePipelineRole.Arn
      ArtifactStore: 
        Type: S3 
        Location: !Ref PacktDeliveryCodePipelineBucket 
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: 1 
                Provider: S3 
              OutputArtifacts: 
                - Name: SourceOutput 
              Configuration: 
                S3Bucket: !Ref PacktDeliveryCodePipelineBucket 
                S3ObjectKey: packtdelivery.zip
              RunOrder: 1 
        - Name: Build 
          Actions: 
            - 
              Name: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts: 
                - Name: BuildOutput 
              Configuration:
                ProjectName: !Ref PacktDeliveryJakartaeeCodeBuild
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              RunOrder: 1
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !Ref PacktDeliveryJakartaECSCluster
                ServiceName: !Ref PacktDeliveryJakartaECSService
#---------------------PIPELINE

